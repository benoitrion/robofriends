{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","ErrorBoundary","props","state","hasError","this","Component","App","useState","setRobots","searchField","setSearchField","useEffect","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sBCKCQ,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACE,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCYHK,EAhBE,SAAC,GAAiB,IAAdC,EAAa,EAAbA,OACjB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GAAP,OACP,cAAC,EAAD,CACMR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMhBC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,8BACI,uBACIT,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,G,MARA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACMJ,M,4BCgBCK,E,kDAjBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,0CAOnB,WACI,OAAIC,KAAKF,MAAMC,SAEP,2DAGDC,KAAKH,MAAMN,a,GAdEU,aCmCbC,EA9BH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACNtB,EADM,KACEuB,EADF,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,KAIdC,qBAAU,WACNC,MAAM,8CACDzC,MAAK,SAAA0C,GAAQ,OAAIA,EAASC,UAC1B3C,MAAK,SAAA4C,GAAK,OAAIP,EAAUO,SAEjC,IAGMC,EAAiB/B,EAAOgC,QAAO,SAAAC,GACjC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASX,EAAYU,kBAEzD,OAAQlC,EAAOoC,OAGP,sBAAKxC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAXA,SAACgC,GACpBZ,EAAeY,EAAMC,OAAOC,UAWpB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUvC,OAAQ+B,WAPlC,oBAAInC,UAAU,QAAd,gCChBR4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.57d3570f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const Card = ({ name, email, id }) => {\r\n    return (\r\n      <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n          <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n          <div>\r\n              <h2>{name}</h2>\r\n              <p>{email}</p>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from \"./Card\";\r\n\r\nconst CardList = ( { robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) =>\r\n                    <Card key={i}\r\n                          id={robots[i].id}\r\n                          name={robots[i].name}\r\n                          email={robots[i].email}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","const SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='Search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","\r\nconst Scroll = ({ children }) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n            { children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <h1>Ooops. There was an error</h1>\r\n            );\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import { useState, useEffect}  from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport './App.css'\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n\r\nconst App = () => {\r\n    const [ robots, setRobots ] = useState([]);\r\n    const [ searchField, setSearchField] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => setRobots(users))\r\n    });\r\n    const onSearchChange = (event) => {\r\n        setSearchField(event.target.value)\r\n    }\r\n    const filteredRobots = robots.filter(robot => {\r\n        return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n    })\r\n    return !robots.length ?\r\n        <h1 className='tc f1'>Loading robots...</h1> :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}